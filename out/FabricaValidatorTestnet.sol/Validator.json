{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e0604052602d60808181529061076960a03960009061001f90826100d1565b5034801561002c57600080fd5b50610190565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061005c57607f821691505b60208210810361007c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156100cc57600081815260208120601f850160051c810160208610156100a95750805b601f850160051c820191505b818110156100c8578281556001016100b5565b5050505b505050565b81516001600160401b038111156100ea576100ea610032565b6100fe816100f88454610048565b84610082565b602080601f831160018114610133576000841561011b5750858301515b600019600386901b1c1916600185901b1785556100c8565b600085815260208120601f198616915b8281101561016257888601518255948401946001909101908401610143565b50858210156101805787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6105ca8061019f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630e89341c14610030575b600080fd5b61004361003e3660046103c5565b610059565b6040516100509190610402565b60405180910390f35b6060600061006630610097565b61006f846100b3565b60405160200161008193929190610451565b6040516020818303038152906040529050919050565b60606100ad6001600160a01b0383166014610146565b92915050565b606060006100c0836102ed565b600101905060008167ffffffffffffffff8111156100e0576100e0610511565b6040519080825280601f01601f19166020018201604052801561010a576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461011457509392505050565b6060600061015583600261053d565b610160906002610554565b67ffffffffffffffff81111561017857610178610511565b6040519080825280601f01601f1916602001820160405280156101a2576020820181803683370190505b509050600360fc1b816000815181106101bd576101bd610567565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106101ec576101ec610567565b60200101906001600160f81b031916908160001a905350600061021084600261053d565b61021b906001610554565b90505b6001811115610293576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061024f5761024f610567565b1a60f81b82828151811061026557610265610567565b60200101906001600160f81b031916908160001a90535060049490941c9361028c8161057d565b905061021e565b5083156102e65760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b9392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061032c5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610358576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061037657662386f26fc10000830492506010015b6305f5e100831061038e576305f5e100830492506008015b61271083106103a257612710830492506004015b606483106103b4576064830492506002015b600a83106100ad5760010192915050565b6000602082840312156103d757600080fd5b5035919050565b60005b838110156103f95781810151838201526020016103e1565b50506000910152565b60208152600082518060208401526104218160408501602087016103de565b601f01601f19169190910160400192915050565b600081516104478185602086016103de565b9290920192915050565b600080855481600182811c91508083168061046d57607f831692505b6020808410820361048c57634e487b7160e01b86526022600452602486fd5b8180156104a057600181146104b5576104e2565b60ff19861689528415158502890196506104e2565b60008c81526020902060005b868110156104da5781548b8201529085019083016104c1565b505084890196505b5050506104ef8489610435565b602f60f81b8152935061050481850188610435565b9998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176100ad576100ad610527565b808201808211156100ad576100ad610527565b634e487b7160e01b600052603260045260246000fd5b60008161058c5761058c610527565b50600019019056fea26469706673582212201c73eb531093702113abfd2bcc280902678b1b678be2de0885dcd77f356b05ed64736f6c6343000811003368747470733a2f2f6d657461646174612d73746167696e672e666162726963612e6c616e642f676f65726c692f",
    "sourceMap": "547:81:23:-:0;388:1126;547:81;;388:1126;547:81;;;388:1126;547:81;;;;;;;;;:::i;:::-;;388:1126;;;;;;;;;;;;14:127:26;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:26;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:26;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:26;;;2580:26;2531:89;-1:-1:-1;;1335:1:26;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:26;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:26;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:26;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:26:o;:::-;388:1126:23;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80630e89341c14610030575b600080fd5b61004361003e3660046103c5565b610059565b6040516100509190610402565b60405180910390f35b6060600061006630610097565b61006f846100b3565b60405160200161008193929190610451565b6040516020818303038152906040529050919050565b60606100ad6001600160a01b0383166014610146565b92915050565b606060006100c0836102ed565b600101905060008167ffffffffffffffff8111156100e0576100e0610511565b6040519080825280601f01601f19166020018201604052801561010a576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461011457509392505050565b6060600061015583600261053d565b610160906002610554565b67ffffffffffffffff81111561017857610178610511565b6040519080825280601f01601f1916602001820160405280156101a2576020820181803683370190505b509050600360fc1b816000815181106101bd576101bd610567565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106101ec576101ec610567565b60200101906001600160f81b031916908160001a905350600061021084600261053d565b61021b906001610554565b90505b6001811115610293576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061024f5761024f610567565b1a60f81b82828151811061026557610265610567565b60200101906001600160f81b031916908160001a90535060049490941c9361028c8161057d565b905061021e565b5083156102e65760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640160405180910390fd5b9392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061032c5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610358576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061037657662386f26fc10000830492506010015b6305f5e100831061038e576305f5e100830492506008015b61271083106103a257612710830492506004015b606483106103b4576064830492506002015b600a83106100ad5760010192915050565b6000602082840312156103d757600080fd5b5035919050565b60005b838110156103f95781810151838201526020016103e1565b50506000910152565b60208152600082518060208401526104218160408501602087016103de565b601f01601f19169190910160400192915050565b600081516104478185602086016103de565b9290920192915050565b600080855481600182811c91508083168061046d57607f831692505b6020808410820361048c57634e487b7160e01b86526022600452602486fd5b8180156104a057600181146104b5576104e2565b60ff19861689528415158502890196506104e2565b60008c81526020902060005b868110156104da5781548b8201529085019083016104c1565b505084890196505b5050506104ef8489610435565b602f60f81b8152935061050481850188610435565b9998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176100ad576100ad610527565b808201808211156100ad576100ad610527565b634e487b7160e01b600052603260045260246000fd5b60008161058c5761058c610527565b50600019019056fea26469706673582212201c73eb531093702113abfd2bcc280902678b1b678be2de0885dcd77f356b05ed64736f6c63430008110033",
    "sourceMap": "388:1126:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1232:280;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1278:13;1354:16;1388:34;1416:4;1388:19;:34::i;:::-;1461:20;1478:2;1461:16;:20::i;:::-;1323:172;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1303:202;;1232:280;;;:::o;2102:149:13:-;2160:13;2192:52;-1:-1:-1;;;;;2204:22:13;;311:2;2192:11;:52::i;:::-;2185:59;2102:149;-1:-1:-1;;2102:149:13:o;415:696::-;471:13;520:14;537:17;548:5;537:10;:17::i;:::-;557:1;537:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:18:13;-1:-1:-1;572:41:13;-1:-1:-1;733:28:13;;;749:2;733:28;788:280;-1:-1:-1;;819:5:13;-1:-1:-1;;;953:2:13;942:14;;937:30;819:5;924:44;1012:2;1003:11;;;-1:-1:-1;1032:21:13;788:280;1032:21;-1:-1:-1;1088:6:13;415:696;-1:-1:-1;;;415:696:13:o;1513:437::-;1588:13;1613:19;1645:10;1649:6;1645:1;:10;:::i;:::-;:14;;1658:1;1645:14;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1635:25:13;;1613:47;;-1:-1:-1;;;1670:6:13;1677:1;1670:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1670:15:13;;;;;;;;;-1:-1:-1;;;1695:6:13;1702:1;1695:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1695:15:13;;;;;;;;-1:-1:-1;1725:9:13;1737:10;1741:6;1737:1;:10;:::i;:::-;:14;;1750:1;1737:14;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;-1:-1:-1;;;1800:5:13;1808:3;1800:11;1791:21;;;;;;;:::i;:::-;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;1779:33:13;;;;;;;;-1:-1:-1;1836:1:13;1826:11;;;;;1760:3;;;:::i;:::-;;;1720:128;;;-1:-1:-1;1865:10:13;;1857:55;;;;-1:-1:-1;;;1857:55:13;;3885:2:26;1857:55:13;;;3867:21:26;;;3904:18;;;3897:30;3963:34;3943:18;;;3936:62;4015:18;;1857:55:13;;;;;;;;1936:6;1513:437;-1:-1:-1;;;1513:437:13:o;9889:890:16:-;9942:7;;-1:-1:-1;;;10017:15:16;;10013:99;;-1:-1:-1;;;10052:15:16;;;-1:-1:-1;10095:2:16;10085:12;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;-1:-1:-1;10207:2:16;10197:12;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;-1:-1:-1;10319:2:16;10309:12;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;-1:-1:-1;10429:1:16;10419:11;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;-1:-1:-1;10538:1:16;10528:11;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;-1:-1:-1;10647:1:16;10637:11;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;10766:6;9889:890;-1:-1:-1;;9889:890:16:o;14:180:26:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:26;;14:180;-1:-1:-1;14:180:26:o;199:250::-;284:1;294:113;308:6;305:1;302:13;294:113;;;384:11;;;378:18;365:11;;;358:39;330:2;323:10;294:113;;;-1:-1:-1;;441:1:26;423:16;;416:27;199:250::o;454:396::-;603:2;592:9;585:21;566:4;635:6;629:13;678:6;673:2;662:9;658:18;651:34;694:79;766:6;761:2;750:9;746:18;741:2;733:6;729:15;694:79;:::i;:::-;834:2;813:15;-1:-1:-1;;809:29:26;794:45;;;;841:2;790:54;;454:396;-1:-1:-1;;454:396:26:o;981:198::-;1023:3;1061:5;1055:12;1076:65;1134:6;1129:3;1122:4;1115:5;1111:16;1076:65;:::i;:::-;1157:16;;;;;981:198;-1:-1:-1;;981:198:26:o;1257:1449::-;1571:3;1600:1;1633:6;1627:13;1663:3;1685:1;1713:9;1709:2;1705:18;1695:28;;1773:2;1762:9;1758:18;1795;1785:61;;1839:4;1831:6;1827:17;1817:27;;1785:61;1865:2;1913;1905:6;1902:14;1882:18;1879:38;1876:165;;-1:-1:-1;;;1940:33:26;;1996:4;1993:1;1986:15;2026:4;1947:3;2014:17;1876:165;2057:18;2084:133;;;;2231:1;2226:320;;;;2050:496;;2084:133;-1:-1:-1;;2117:24:26;;2105:37;;2190:14;;2183:22;2171:35;;2162:45;;;-1:-1:-1;2084:133:26;;2226:320;928:1;921:14;;;965:4;952:18;;2321:1;2335:165;2349:6;2346:1;2343:13;2335:165;;;2427:14;;2414:11;;;2407:35;2470:16;;;;2364:10;;2335:165;;;2339:3;;2529:6;2524:3;2520:16;2513:23;;2050:496;;;;2568:30;2594:3;2586:6;2568:30;:::i;:::-;-1:-1:-1;;;1234:16:26;;2555:43;-1:-1:-1;2659:41:26;2696:2;2689:5;2685:14;2677:6;2659:41;:::i;:::-;2652:48;1257:1449;-1:-1:-1;;;;;;;;;1257:1449:26:o;2711:127::-;2772:10;2767:3;2763:20;2760:1;2753:31;2803:4;2800:1;2793:15;2827:4;2824:1;2817:15;2975:127;3036:10;3031:3;3027:20;3024:1;3017:31;3067:4;3064:1;3057:15;3091:4;3088:1;3081:15;3107:168;3180:9;;;3211;;3228:15;;;3222:22;;3208:37;3198:71;;3249:18;;:::i;3280:125::-;3345:9;;;3366:10;;;3363:36;;;3379:18;;:::i;3410:127::-;3471:10;3466:3;3462:20;3459:1;3452:31;3502:4;3499:1;3492:15;3526:4;3523:1;3516:15;3542:136;3581:3;3609:5;3599:39;;3618:18;;:::i;:::-;-1:-1:-1;;;3654:18:26;;3542:136::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "uri(uint256)": "0e89341c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the Fabrica validator smart contract      Delegates the metadata `uri` function to this contract      May add other fields in newer versions\",\"kind\":\"dev\",\"methods\":{\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID. function uri(uint256) public view virtual override returns (string memory) {return _uri;} Fabrica: use network name subdomain and contract address + tokenId, no suffix '.json'\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/FabricaValidatorTestnet.sol\":\"Validator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"src/FabricaValidatorInterface.sol\":{\"keccak256\":\"0xf3a0598c67ca1eaaf13e1869fddb2d15931d606d10696a4751fcb4c7a6bb7b2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fc25e4ced5af68cd7b39571811ee89288a868c4d2399bea5ae266a31a531dfd\",\"dweb:/ipfs/QmaiDWCUZeMZe9iXcuhxQLquVNPuFXyFgJFMXuzc2cZ8KL\"]},\"src/FabricaValidatorTestnet.sol\":{\"keccak256\":\"0xb0a981549219a4c2fa1de8b11c9d466a29f6bd3e030f8d7c7c06c7e2d620b699\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553f88121a2dd26a450d215785e5f0333a7fab947e79cc1fdb44dd85c745fc4\",\"dweb:/ipfs/QmY2b4Xoc12AywSdprT1XjbXr3fQkFdxhfU32rHjdLEpaL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "uri(uint256)": {
            "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID. function uri(uint256) public view virtual override returns (string memory) {return _uri;} Fabrica: use network name subdomain and contract address + tokenId, no suffix '.json'"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/FabricaValidatorTestnet.sol": "Validator"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "src/FabricaValidatorInterface.sol": {
        "keccak256": "0xf3a0598c67ca1eaaf13e1869fddb2d15931d606d10696a4751fcb4c7a6bb7b2d",
        "urls": [
          "bzz-raw://2fc25e4ced5af68cd7b39571811ee89288a868c4d2399bea5ae266a31a531dfd",
          "dweb:/ipfs/QmaiDWCUZeMZe9iXcuhxQLquVNPuFXyFgJFMXuzc2cZ8KL"
        ],
        "license": "MIT"
      },
      "src/FabricaValidatorTestnet.sol": {
        "keccak256": "0xb0a981549219a4c2fa1de8b11c9d466a29f6bd3e030f8d7c7c06c7e2d620b699",
        "urls": [
          "bzz-raw://f553f88121a2dd26a450d215785e5f0333a7fab947e79cc1fdb44dd85c745fc4",
          "dweb:/ipfs/QmY2b4Xoc12AywSdprT1XjbXr3fQkFdxhfU32rHjdLEpaL"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/FabricaValidatorTestnet.sol",
    "id": 9296,
    "exportedSymbols": {
      "IValidator": [
        9256
      ],
      "Math": [
        3563
      ],
      "Strings": [
        2662
      ],
      "Validator": [
        9295
      ]
    },
    "nodeType": "SourceUnit",
    "src": "85:1430:23",
    "nodes": [
      {
        "id": 9258,
        "nodeType": "PragmaDirective",
        "src": "85:24:23",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 9259,
        "nodeType": "ImportDirective",
        "src": "111:51:23",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "file": "@openzeppelin/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9296,
        "sourceUnit": 2663,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9260,
        "nodeType": "ImportDirective",
        "src": "163:41:23",
        "nodes": [],
        "absolutePath": "src/FabricaValidatorInterface.sol",
        "file": "./FabricaValidatorInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9296,
        "sourceUnit": 9257,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9295,
        "nodeType": "ContractDefinition",
        "src": "388:1126:23",
        "nodes": [
          {
            "id": 9266,
            "nodeType": "VariableDeclaration",
            "src": "547:81:23",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_baseMetadataUri",
            "nameLocation": "562:16:23",
            "scope": 9295,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 9264,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "547:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "68747470733a2f2f6d657461646174612d73746167696e672e666162726963612e6c616e642f676f65726c692f",
              "id": 9265,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "581:47:23",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_6541131472e582acdb64c4a8dd4a8c782d1a03546bfb1fabb9d88cc2f73ceb7e",
                "typeString": "literal_string \"https://metadata-staging.fabrica.land/goerli/\""
              },
              "value": "https://metadata-staging.fabrica.land/goerli/"
            },
            "visibility": "private"
          },
          {
            "id": 9294,
            "nodeType": "FunctionDefinition",
            "src": "1232:280:23",
            "nodes": [],
            "body": {
              "id": 9293,
              "nodeType": "Block",
              "src": "1293:219:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 9277,
                            "name": "_baseMetadataUri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9266,
                            "src": "1354:16:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 9282,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "1416:4:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Validator_$9295",
                                      "typeString": "contract Validator"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Validator_$9295",
                                      "typeString": "contract Validator"
                                    }
                                  ],
                                  "id": 9281,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1408:7:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 9280,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1408:7:23",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 9283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1408:13:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 9278,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2662,
                                "src": "1388:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$2662_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 9279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1396:11:23",
                              "memberName": "toHexString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2661,
                              "src": "1388:19:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (address) pure returns (string memory)"
                              }
                            },
                            "id": 9284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1388:34:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2f",
                            "id": 9285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1440:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                              "typeString": "literal_string \"/\""
                            },
                            "value": "/"
                          },
                          {
                            "arguments": [
                              {
                                "id": 9288,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9269,
                                "src": "1478:2:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 9286,
                                "name": "Strings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2662,
                                "src": "1461:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Strings_$2662_$",
                                  "typeString": "type(library Strings)"
                                }
                              },
                              "id": 9287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1469:8:23",
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2545,
                              "src": "1461:16:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 9289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1461:20:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                              "typeString": "literal_string \"/\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 9275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1323:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 9274,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1323:6:23",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1330:6:23",
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "src": "1323:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () pure returns (string memory)"
                          }
                        },
                        "id": 9290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1323:172:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "id": 9291,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1309:196:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 9273,
                  "id": 9292,
                  "nodeType": "Return",
                  "src": "1303:202:23"
                }
              ]
            },
            "baseFunctions": [
              9255
            ],
            "documentation": {
              "id": 9267,
              "nodeType": "StructuredDocumentation",
              "src": "635:592:23",
              "text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID.\n function uri(uint256) public view virtual override returns (string memory) {return _uri;}\n Fabrica: use network name subdomain and contract address + tokenId, no suffix '.json'"
            },
            "functionSelector": "0e89341c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "1241:3:23",
            "parameters": {
              "id": 9270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9269,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1253:2:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 9294,
                  "src": "1245:10:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1244:12:23"
            },
            "returnParameters": {
              "id": 9273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9272,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9294,
                  "src": "1278:13:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9271,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1277:15:23"
            },
            "scope": 9295,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9262,
              "name": "IValidator",
              "nameLocations": [
                "410:10:23"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9256,
              "src": "410:10:23"
            },
            "id": 9263,
            "nodeType": "InheritanceSpecifier",
            "src": "410:10:23"
          }
        ],
        "canonicalName": "Validator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9261,
          "nodeType": "StructuredDocumentation",
          "src": "207:180:23",
          "text": " @dev Implementation of the Fabrica validator smart contract\n      Delegates the metadata `uri` function to this contract\n      May add other fields in newer versions"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          9295,
          9256
        ],
        "name": "Validator",
        "nameLocation": "397:9:23",
        "scope": 9296,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 23
}